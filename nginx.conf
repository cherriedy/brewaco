# Nginx configuration for Brew&Co API
# This configuration sets up reverse proxy for two subdomains:
# - api.domain.com -> Public API (port 9001)
# - admin.domain.com -> Protected API (port 9002)

# Upstream definitions for backend servers
# For local deployment: use localhost
# For Docker deployment: use service names (public-api:9001, admin-api:9002)
upstream public_api {
    # Uncomment the appropriate line based on your deployment:
    server localhost:9001;           # For local deployment
    # server public-api:9001;        # For Docker deployment
}

upstream admin_api {
    # Uncomment the appropriate line based on your deployment:
    server localhost:9002;           # For local deployment
    # server admin-api:9002;         # For Docker deployment
}

# Public API - api.domain.com
server {
    listen 80;
    server_name api.domain.com;

    # Redirect HTTP to HTTPS (uncomment when SSL is configured)
    # return 301 https://$server_name$request_uri;

    # Log files
    access_log /var/log/nginx/api.domain.com_access.log;
    error_log /var/log/nginx/api.domain.com_error.log;

    # Proxy settings
    location / {
        proxy_pass http://public_api;
        proxy_http_version 1.1;

        # Headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Cache settings
        proxy_cache_bypass $http_upgrade;

        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}

# Admin API - admin.domain.com
server {
    listen 80;
    server_name admin.domain.com;

    # Redirect HTTP to HTTPS (uncomment when SSL is configured)
    # return 301 https://$server_name$request_uri;

    # Log files
    access_log /var/log/nginx/admin.domain.com_access.log;
    error_log /var/log/nginx/admin.domain.com_error.log;

    # Proxy settings
    location / {
        proxy_pass http://admin_api;
        proxy_http_version 1.1;

        # Headers
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Cache settings
        proxy_cache_bypass $http_upgrade;

        # Timeout settings
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
}

# SSL Configuration (HTTPS) - Uncomment and configure after obtaining SSL certificates
# You can use Let's Encrypt with certbot to generate free SSL certificates
# Run: sudo certbot --nginx -d api.domain.com -d admin.domain.com

# server {
#     listen 443 ssl http2;
#     server_name api.domain.com;
#
#     ssl_certificate /etc/letsencrypt/live/api.domain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/api.domain.com/privkey.pem;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#
#     access_log /var/log/nginx/api.domain.com_ssl_access.log;
#     error_log /var/log/nginx/api.domain.com_ssl_error.log;
#
#     location / {
#         proxy_pass http://public_api;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
#     }
# }

# server {
#     listen 443 ssl http2;
#     server_name admin.domain.com;
#
#     ssl_certificate /etc/letsencrypt/live/admin.domain.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/admin.domain.com/privkey.pem;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#
#     access_log /var/log/nginx/admin.domain.com_ssl_access.log;
#     error_log /var/log/nginx/admin.domain.com_ssl_error.log;
#
#     location / {
#         proxy_pass http://admin_api;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection 'upgrade';
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#         proxy_cache_bypass $http_upgrade;
#     }
# }

